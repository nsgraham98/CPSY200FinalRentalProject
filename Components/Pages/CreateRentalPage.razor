@page "/createrentalpage"
@* @page "/createrentalfromcustomer/{CustomerId:int}/{FirstName}/{LastName}/{Phone}/{Email}/{IsBanned}" *@
@using CPSY200FinalRentalProject.Data
@inject NavigationManager navManager

<h3 class="heading">New Rental</h3>
<section>
    <div class="box">
        <h3>Search Customer</h3>
        <p>Search by:</p>
        <input type="checkbox" placeholder="">
        <label for="ID">ID</label>
        <input type="checkbox" placeholder="">
        <label for="phone">Phone</label><br />
        <input type="checkbox" placeholder="">
        <label for="name">Last Name</label>
        <input type="checkbox" placeholder="">
        <label for="Email">Email</label>
        <br /><br />
        <input type="text" placeholder="Search by name, ID, phone, email">
        <button>Search</button>
        <select>
            <option>Select Customer</option>
        </select>
        <button>Select</button>
    </div>
    <div class="box">
        <h3>Search Equipment</h3>
        <p>Search by:</p>
        <input type="checkbox" placeholder="">
        <label for="ID">ID</label> <br />
        <input type="checkbox" placeholder="">
        <label for="Brand">Brand</label>
        <select>
            <option>Burton</option>
        </select><br />
        <input type="checkbox" placeholder="">
        <label for="category">Category</label>
        <select><option>Snowboard</option></select><br />
        <input type="checkbox" placeholder="">
        <label for="phone">Customer Phone</label>
        <br /><br />
        <input type="text" placeholder="Search by name, ID, phone, email">
        <button>Select</button>
        <select>
            <option>Select Equipment</option>
        </select>
        <button>Select</button>
    </div>
</section>

<style>
    ﻿
    .heading {
        text-align: center;
    }

    .grid {
        display: grid;
        grid-template-columns: auto;
        gap: 20px;
    }

    .box {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .box h3 {
            font-size: 18px;
            color: #3b5998;
            margin-bottom: 10px;
            text-align: center;
        }

        .box p {
            margin: 10px 0;
            font-size: 14px;
        }

        .box button {
            background-color: #F1F1F1;
            color: black;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

    label {
        padding-bottom: 8px;
    }

    .box button:hover {
        background-color: #4c669f;
    }</style>

@code {
    // List<Product> productList = ProductManager.Retriveproduct();
    // int prodId;
    // string prodName;
    // int prodQty;
    // int prodPrice;
    // bool edit = false;
    // bool delete = false;
    // string message;


    // protected async override void OnInitialized()
    // {
    //     base.OnInitialized();
    //     Product prodInfo = new Product();
    //     if (prodId > 0)
    //     {
    //         prodId = prodInfo.ProdId;
    //         prodName = prodInfo.ProdName;
    //         prodQty = prodInfo.ProdQty;
    //         prodPrice = prodInfo.ProdPrice;
    //         this.StateHasChanged();
    //     }
    // }
    // public void AddNewProduct()
    // {
    //     navigationManager.NavigateTo("addupdateproduct");
    // }
    // public void Loadproduct(Product product)
    // {
    //     edit = true;
    //     prodId = product.ProdId;
    //     prodName = product.ProdName;
    //     prodQty = product.ProdQty;
    //     prodPrice = product.ProdPrice;
    // }
    // void UpdateProduct(Product product)
    // {
    //     navigationManager.NavigateTo($"updateproduct/{product.ProdId}/{product.ProdName}/{product.ProdQty}/{product.ProdPrice}");
    //     message = ProductManager.EditProduct(product.ProdId, product.ProdName, product.ProdQty, product.ProdPrice);
    //     edit = false;
    // }

    // Delete Button
    // void RemoveProduct(Product product)
    // {
    //     prodId = product.ProdId;
    //     message = ProductManager.DeleteProduct(prodId);
    //     delete = true;
    // }
    // public void AddEquipmentToRental(Equipment equipment)
    // {
    //     navManager.NavigateTo($"createrentalfromcustomer/{equipment.EquipmentId}/{equipment.FirstName}/{equipment.LastName}/{equipment.Phone}/{equipment.Email}/{equipment.IsBanned}");
    // }
}
